<script type="module" src="/components/AddNewRuleButton.js"></script>
<script src="/lib/jszip.js"></script>
<script src="/lib/FileSaver.min.js"></script>

<link rel="stylesheet" type="text/css" href="/styles/index.css">

<a id="about-btn" href="/about">About</a>

<div class="content">
    
  <div id="title-container">
    <h1 id="title">
      ðŸª¹ Community Nest ðŸª¹
    </h1>
    <h4 id="subtitle">
      a public-domain collection of archives from one part of twitter
    </h4>

    <ol>
      <li>
        Download your Twitter archive from:<br/>
        <a href="https://twitter.com/settings/download_your_data" target="_blank">https://twitter.com/settings/download_your_data</a>
      </li>
      <li>Upload it here, or self host &amp; submit a link</li>
      <li>Semantically analyze your archive, link it with friends,<br/> share tools &amp; help others!</li>
    </ol>

    <p class="muted-text todo">
      TODO: goal is basically to have an open collection of our twitter archives. I want to semantically analyze mine and visualize it. It would be nice if people I interact with also had their archives published, so I can link them/visualize them together.
    </p>
    <p class="muted-text todo">
      It would be EXTRA nice if friends  &amp;  people I'm interested in learning about posted theirs too, because then I can ask an LLM "what are their views on this or that? What's the first instance where they expressed an opinion on ABC?"
    </p>
  </div>

  <h1>
    Archives
  </h1>

  <p>
    You have two options. Either upload your archive directly and let us host it. Or host it yourself and just submit a link here. These archives are freely available, anyone can get a copy of the database which contains (1) the raw data (2) links to those who self host 
  </p>

  {{#each archives}}
    <li>
      {{this.dataValues.username}} ({{this.dataValues.numTweets}} tweets)
      <br/><a href="/archives/{{this.dataValues.accountId}}" style="margin-left: 30px;">open archive ðŸ“¦</a></li>
    </li>
  {{/each}}

  <p class="muted-text todo">
    TODO: button to download the entire DB
  </p>

  <p>
    Upload the following files:
  </p>

  <ul>
    {{#each expectedFiles}}
      <li><code>{{this}}</code></li>
    {{/each}}  
  </ul>

  <form multiple ref='uploadForm' 
      id='uploadForm' 
      action='/newArchive' 
      method='post' 
      encType="multipart/form-data">
        <label>Archive zip:</label> 
        <input type="file" name="archive" multiple/>
        <br/>
        <input type='submit' value='Upload!' />
    </form>     

  <script>
    const form = document.querySelector("#uploadForm")
    form.onchange = async function(e) {
        const files = e.target.files 
        console.log(files[0])
        const oldZip = await JSZip.loadAsync(files[0])
        // result.file('Your archive.html').async("string").then(console.log)
        console.log(oldZip)
        const newZip = new JSZip();
        const filesToExtract = [
          'account.js', 'tweets.js', 'like.js', 'following.js', 'follower.js'
        ]
        for (let i = 0; i < filesToExtract) {
          const filename = `data/${filesToExtract[i]}`
          newZip.file(filename, oldZip.files[filename].async('blob'));
        }
        
        const result = await newZip.generateAsync({
          type: "blob",
          compression: "DEFLATE",
          compressionOptions: {
              level: 9
          }
        });

        saveAs( result, 'new.zip')
    }
  </script>
</div>